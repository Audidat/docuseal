# DocuSeal Production Environment Variables
# Copy this file to .env.prod and update with your values
# Usage: docker compose -f docker-compose.prod.yml --env-file .env.prod up -d

# ============================================
# Rails Application
# ============================================

# Secret key base (MUST be changed in production!)
# Generate with: docker compose -f docker-compose.prod.yml run --rm app bundle exec rails secret
SECRET_KEY_BASE=changeme_run_rails_secret_to_generate_a_secure_random_key

# Rails environment
RAILS_ENV=production
NODE_ENV=production

# ============================================
# Database (PostgreSQL)
# ============================================

# PostgreSQL connection string
DATABASE_URL=postgresql://postgres:postgres@postgres:5432/docuseal_production

# PostgreSQL credentials (used by postgres service)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changeme_strong_password
POSTGRES_DB=docuseal_production

# ============================================
# Redis (for Sidekiq and cache)
# ============================================

REDIS_URL=redis://redis:6379/0

# ============================================
# DSS Service (Digital Signatures)
# ============================================

# DSS Service URL (internal Docker network)
DSS_SERVICE_URL=http://dss-service:4000

# PDF Signature type (pades for EU-compliant signatures)
SIGNATURE_TYPE=pades

# Certificate path (relative to dss_service directory)
P12_PATH=cotelmur.p12

# Certificate password
P12_PASSWORD=changeme_your_certificate_password

# Timestamp Authority URL
TSA_URL=http://timestamp.digicert.com

# ============================================
# Caddy (Reverse Proxy & SSL)
# ============================================

# Your production domain (for automatic HTTPS with Let's Encrypt)
# Examples: example.com, docuseal.yourdomain.com
DOMAIN=localhost

# ============================================
# SMTP Email (Optional - can also configure via UI)
# ============================================

# SMTP Host (e.g., smtp.gmail.com, smtp.sendgrid.net)
SMTP_HOST=

# SMTP Port (587 for STARTTLS, 465 for SSL)
SMTP_PORT=

# SMTP Username (usually your email address)
SMTP_USERNAME=

# SMTP Password or API Key
SMTP_PASSWORD=

# From email address
SMTP_FROM=

# ============================================
# Optional: Advanced Configuration
# ============================================

# Force SSL (automatically enabled when DOMAIN is set)
# FORCE_SSL=true

# Custom host for email links (if different from DOMAIN)
# EMAIL_HOST=

# S3/Cloud Storage (if using external storage)
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_REGION=
# AWS_BUCKET=

# Rollbar error tracking (optional)
# ROLLBAR_ACCESS_TOKEN=

# Google OAuth (optional, for SSO)
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=

# ============================================
# Performance Tuning (Optional)
# ============================================

# Puma workers (default: auto-detected based on CPU)
# WEB_CONCURRENCY=2

# Puma threads per worker
# RAILS_MAX_THREADS=5

# Sidekiq concurrency (number of parallel jobs)
# SIDEKIQ_CONCURRENCY=10

# ============================================
# Security (Optional)
# ============================================

# Enable 2FA requirement for all users
# FORCE_2FA=false

# Session timeout in hours
# SESSION_TIMEOUT=24

# Max failed login attempts before lockout
# MAX_LOGIN_ATTEMPTS=5
